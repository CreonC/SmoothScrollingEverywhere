import java.text.SimpleDateFormat

plugins {
    id 'fabric-loom' version '0.2.6-SNAPSHOT'
    id 'maven-publish'
    id 'maven'
    id 'signing'
    id 'com.jfrog.bintray' version '1.8.4'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = ((String) project.mod_version).contains("unstable") ? (project.mod_version + "." + buildTime()) : project.mod_version
group = project.maven_group

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    return df.format(new Date())
}

minecraft {
}

repositories {
    jcenter()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation 'me.shedaniel.cloth:config-2:2.11.2'
    modImplementation "io.github.prospector:modmenu:${modmenu_version}"
    include 'me.shedaniel.cloth:config-2:2.11.2'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_KEY')
    publications = ["mavenJava"]
    override = true
    pkg {
        repo = "shedaniel-mods"
        name = "SmoothScrollingEverywhere"
        userOrg = "shedaniel"
        licenses = ["Apache-2.0"]
        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
            desc = "Smooth Scrolling Everywhere"
            githubRepo = 'shedaniel/SmoothScrollingEverywhere'
            websiteUrl = 'https://github.com/shedaniel/SmoothScrollingEverywhere'
            issueTrackerUrl = 'https://github.com/shedaniel/SmoothScrollingEverywhere/issues'
            vcsUrl = 'https://github.com/shedaniel/SmoothScrollingEverywhere.git'
            gpg {
                sign = true
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocs(type: Javadoc) {
    source = sourceSets.main.allJava
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = "javadocs"
    javadocs.failOnError false
    from javadocs.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(file("${project.buildDir}/libs/${project.archivesBaseName}-${project.version}.jar")) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact javadocsJar
            groupId = project.group
            artifactId  = project.archivesBaseName
            version = project.version
        }
    }

    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}